service: imguploader-api
provider:
  name: aws
  runtime: rust
  memorySize: 128
  region: ap-northeast-1
  stage: ${opt:stage, self:custom.defaultStage}
  logs:
    restApi:
      accessLogging: true
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:*"
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:s3:::"
            - ${self:custom.bucketName.${self:provider.stage}}
            - "/*"

package:
  individually: true

plugins:
  - serverless-rust
  - serverless-offline
  - serverless-s3-local

functions:
  geturl:
    handler: geturl
    events:
      - http:
          path: '/'
          method: POST
          integration: lambda
          request:
            template:
              application/json: $input.json('$')
    environment:
      BUCKET_NAME: ${self:custom.bucketName.${self:provider.stage}}
      LOCAL_FLAG: ${self:custom.localFlag.${self:provider.stage}}

resources:
  Resources:
    Bucket:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:custom.bucketName.${self:provider.stage}}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders:
                - '*'
              AllowedOrigins:
                - '*'
              AllowedMethods:
                - GET
            - AllowedHeaders:
                - '*'
              AllowedMethods:
                - POST
              AllowedOrigins:
                - ${self:custom.frontDomain.${self:provider.stage}}
    S3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: Bucket
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
              - S3:GetObject
              Resource:
                Fn::Join: [
                  "", [
                    "arn:aws:s3:::",
                    {
                      "Ref": "Bucket"
                    },
                    "/*"
                  ]
                ]

custom:
  defaultStage: dev
  s3:
    host: localhost
    directory: /tmp
    port: 8000
    vhostBuckets: false
    cors: ./local_cors.xml
  bucketName:
    local: offline-imguploader
    dev: zeroclock-imguploader-development
    release: zeroclock-imguploader-release
  localFlag:
    local: local
    dev: ''
    release: ''
  frontDomain:
    local: 'http://localhost:3001'
    dev: 'https://d.imguploader.zeroclock.dev'
    release: 'https://imguploader.zeroclock.dev'
